{
  "test_run_id": "2025-07-25T18:27:58.339249",
  "services": {
    "DownloadService": {
      "service_name": "DownloadService",
      "test_file": "tests/memory/test_download_memory_leaks.py",
      "exit_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.12.4, pytest-7.4.4, pluggy-1.6.0 -- /Users/nick.gogan/Desktop/Projects/YTArchive/.venv/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/nick.gogan/Desktop/Projects/YTArchive\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, cov-4.1.0, mock-3.12.0, asyncio-0.21.2\nasyncio: mode=Mode.AUTO\ncollecting ... collected 8 items\n\ntests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_single_download_memory_leak FAILED\ntests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_multiple_downloads_memory_leak FAILED\ntests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_concurrent_downloads_memory_leak FAILED\ntests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_failed_download_memory_leak FAILED\ntests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_http_client_cleanup FAILED\n\n=================================== FAILURES ===================================\n_______ TestDownloadServiceMemoryLeaks.test_single_download_memory_leak ________\ntests/memory/test_download_memory_leaks.py:45: in test_single_download_memory_leak\n    async with memory_leak_test(detector, \"single_download\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n______ TestDownloadServiceMemoryLeaks.test_multiple_downloads_memory_leak ______\ntests/memory/test_download_memory_leaks.py:86: in test_multiple_downloads_memory_leak\n    async with memory_leak_test(detector, \"multiple_downloads\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n_____ TestDownloadServiceMemoryLeaks.test_concurrent_downloads_memory_leak _____\ntests/memory/test_download_memory_leaks.py:125: in test_concurrent_downloads_memory_leak\n    async with memory_leak_test(detector, \"concurrent_downloads\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n_______ TestDownloadServiceMemoryLeaks.test_failed_download_memory_leak ________\ntests/memory/test_download_memory_leaks.py:168: in test_failed_download_memory_leak\n    async with memory_leak_test(detector, \"failed_download\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n___________ TestDownloadServiceMemoryLeaks.test_http_client_cleanup ____________\ntests/memory/test_download_memory_leaks.py:203: in test_http_client_cleanup\n    async with memory_leak_test(detector, \"http_client_cleanup\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n=========================== short test summary info ============================\nFAILED tests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_single_download_memory_leak\nFAILED tests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_multiple_downloads_memory_leak\nFAILED tests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_concurrent_downloads_memory_leak\nFAILED tests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_failed_download_memory_leak\nFAILED tests/memory/test_download_memory_leaks.py::TestDownloadServiceMemoryLeaks::test_http_client_cleanup\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 5 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n============================== 5 failed in 0.26s ===============================\n",
      "stderr": "",
      "tests_passed": false,
      "memory_issues": []
    },
    "MetadataService": {
      "service_name": "MetadataService",
      "test_file": "tests/memory/test_metadata_memory_leaks.py",
      "exit_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.12.4, pytest-7.4.4, pluggy-1.6.0 -- /Users/nick.gogan/Desktop/Projects/YTArchive/.venv/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/nick.gogan/Desktop/Projects/YTArchive\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, cov-4.1.0, mock-3.12.0, asyncio-0.21.2\nasyncio: mode=Mode.AUTO\ncollecting ... collected 9 items\n\ntests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_single_video_metadata_memory_leak FAILED\ntests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_cache_memory_leak FAILED\ntests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_batch_fetch_memory_leak FAILED\ntests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_playlist_metadata_memory_leak FAILED\ntests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_quota_management_memory_leak FAILED\n\n=================================== FAILURES ===================================\n____ TestMetadataServiceMemoryLeaks.test_single_video_metadata_memory_leak _____\ntests/memory/test_metadata_memory_leaks.py:38: in test_single_video_metadata_memory_leak\n    async with memory_leak_test(detector, \"single_video_metadata\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n____________ TestMetadataServiceMemoryLeaks.test_cache_memory_leak _____________\ntests/memory/test_metadata_memory_leaks.py:88: in test_cache_memory_leak\n    async with memory_leak_test(detector, \"cache_memory_leak\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n_________ TestMetadataServiceMemoryLeaks.test_batch_fetch_memory_leak __________\ntests/memory/test_metadata_memory_leaks.py:148: in test_batch_fetch_memory_leak\n    async with memory_leak_test(detector, \"batch_fetch\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n______ TestMetadataServiceMemoryLeaks.test_playlist_metadata_memory_leak _______\ntests/memory/test_metadata_memory_leaks.py:196: in test_playlist_metadata_memory_leak\n    async with memory_leak_test(detector, \"playlist_metadata\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n_______ TestMetadataServiceMemoryLeaks.test_quota_management_memory_leak _______\ntests/memory/test_metadata_memory_leaks.py:249: in test_quota_management_memory_leak\n    async with memory_leak_test(detector, \"quota_management\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n=========================== short test summary info ============================\nFAILED tests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_single_video_metadata_memory_leak\nFAILED tests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_cache_memory_leak\nFAILED tests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_batch_fetch_memory_leak\nFAILED tests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_playlist_metadata_memory_leak\nFAILED tests/memory/test_metadata_memory_leaks.py::TestMetadataServiceMemoryLeaks::test_quota_management_memory_leak\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 5 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n============================== 5 failed in 0.21s ===============================\n",
      "stderr": "",
      "tests_passed": false,
      "memory_issues": []
    },
    "StorageService": {
      "service_name": "StorageService",
      "test_file": "tests/memory/test_storage_memory_leaks.py",
      "exit_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.12.4, pytest-7.4.4, pluggy-1.6.0 -- /Users/nick.gogan/Desktop/Projects/YTArchive/.venv/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/nick.gogan/Desktop/Projects/YTArchive\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, cov-4.1.0, mock-3.12.0, asyncio-0.21.2\nasyncio: mode=Mode.AUTO\ncollecting ... collected 8 items\n\ntests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_metadata_storage_memory_leak FAILED\ntests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_video_storage_memory_leak FAILED\ntests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_work_plan_storage_memory_leak FAILED\ntests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_storage_stats_memory_leak FAILED\ntests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_file_operations_memory_leak FAILED\n\n=================================== FAILURES ===================================\n_______ TestStorageServiceMemoryLeaks.test_metadata_storage_memory_leak ________\ntests/memory/test_storage_memory_leaks.py:53: in test_metadata_storage_memory_leak\n    async with memory_leak_test(detector, \"metadata_storage\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n_________ TestStorageServiceMemoryLeaks.test_video_storage_memory_leak _________\ntests/memory/test_storage_memory_leaks.py:94: in test_video_storage_memory_leak\n    async with memory_leak_test(detector, \"video_storage\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n_______ TestStorageServiceMemoryLeaks.test_work_plan_storage_memory_leak _______\ntests/memory/test_storage_memory_leaks.py:130: in test_work_plan_storage_memory_leak\n    async with memory_leak_test(detector, \"work_plan_storage\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n_________ TestStorageServiceMemoryLeaks.test_storage_stats_memory_leak _________\ntests/memory/test_storage_memory_leaks.py:179: in test_storage_stats_memory_leak\n    async with memory_leak_test(detector, \"storage_stats\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n________ TestStorageServiceMemoryLeaks.test_file_operations_memory_leak ________\ntests/memory/test_storage_memory_leaks.py:227: in test_file_operations_memory_leak\n    async with memory_leak_test(detector, \"file_operations\"):\n../../../.local/share/uv/python/cpython-3.12.4-macos-aarch64-none/lib/python3.12/contextlib.py:210: in __aenter__\n    return await anext(self.gen)\ntests/memory_leak_detection.py:242: in memory_leak_test\n    start_snapshot = detector.take_snapshot(f\"{test_name}_start\")\ntests/memory_leak_detection.py:153: in take_snapshot\n    snapshot = MemorySnapshot(timestamp=time.time())\nE   TypeError: MemorySnapshot.__init__() missing 4 required positional arguments: 'rss_mb', 'vms_mb', 'cpu_percent', and 'open_files'\n=========================== short test summary info ============================\nFAILED tests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_metadata_storage_memory_leak\nFAILED tests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_video_storage_memory_leak\nFAILED tests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_work_plan_storage_memory_leak\nFAILED tests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_storage_stats_memory_leak\nFAILED tests/memory/test_storage_memory_leaks.py::TestStorageServiceMemoryLeaks::test_file_operations_memory_leak\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 5 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n============================== 5 failed in 0.14s ===============================\n",
      "stderr": "",
      "tests_passed": false,
      "memory_issues": []
    }
  },
  "summary": {
    "total_tests": 3,
    "passed_tests": 0,
    "failed_tests": 3,
    "leaks_detected": 0,
    "critical_leaks": 0,
    "high_leaks": 0,
    "medium_leaks": 0,
    "low_leaks": 0
  },
  "recommendations": [
    {
      "severity": "ERROR",
      "issue": "3 test suites failed to run",
      "action": "Fix test environment and re-run memory leak detection",
      "details": "Test failures prevent proper memory leak assessment"
    },
    {
      "severity": "INFO",
      "issue": "Production monitoring recommendations",
      "action": "Implement continuous memory monitoring in production",
      "details": "Use tools like Prometheus + Grafana to monitor memory usage patterns"
    },
    {
      "severity": "INFO",
      "issue": "Resource limits recommendations",
      "action": "Set appropriate memory limits for each service",
      "details": "Configure container memory limits based on test results"
    },
    {
      "severity": "INFO",
      "issue": "Regular testing recommendations",
      "action": "Run memory leak tests regularly as part of CI/CD",
      "details": "Include memory leak detection in automated testing pipeline"
    }
  ]
}
